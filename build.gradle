/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://repo.spring.io/plugins-release'
        }
    }

    dependencies {
        classpath 'io.spring.gradle:propdeps-plugin:0.0.10.RELEASE'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'org.nosphere.apache.rat' version '0.6.0'
    id 'com.jfrog.artifactory' version '4.15.1'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'maven-publish'
    id 'idea'
    id 'java'
}

group 'org.apache.fineract.cn'
version '0.1.0-BUILD-SNAPSHOT'

apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: "io.spring.dependency-management"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenLocal()
    maven { url 'https://mifos.jfrog.io/mifos/libs-snapshot/' }
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Cairo-SR8'
    }
}

dependencies {
    compile (
            [group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.6.RELEASE'],
            [group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'],
            [group: 'org.liquibase', name: 'liquibase-core', version: '3.8.9'],
            [group: 'org.apache.fineract.cn', name: 'lang', version: '0.1.0-BUILD-SNAPSHOT'],
            [group: 'com.google.code.findbugs', name: 'jsr305']
    )

    testCompile (
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test'],
            [group: 'org.hsqldb', name: 'hsqldb', version: '2.5.0']
    )
}

jar {
    from sourceSets.main.java
}

publishing {
    publications {
        databaseConnector(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version project.findProperty('externalVersion') ?: project.version
        }
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_URL")
    publish {
        repository {
            repoKey = project.findProperty('artifactoryRepoKey')
            username = System.getenv("ARTIFACTORY_USER")
            password = System.getenv("ARTIFACTORY_PASSWORD")
        }

        defaults {
            publications ('databaseConnector')
        }
    }
}
artifactoryPublish.dependsOn('clean','publishToMavenLocal')

license {
    header rootProject.file('HEADER')
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
        xml = 'XML_STYLE'
        yml = 'SCRIPT_STYLE'
        yaml = 'SCRIPT_STYLE'
    }
}

rat {
    // List of exclude directives, defaults to ['**/.gradle/**']
    excludes = [
            "**/.idea/**",
            "**/.gradle/**",
            "**/gradle/**",
            "**/build/**",
            "gradlew",
            "gradlew.bat",
            "README.md",
            ".project",
            ".settings/**"
    ]
}
